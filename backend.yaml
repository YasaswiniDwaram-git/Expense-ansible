- name: configure backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.yashd.icu
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs and mysql
    ansible.builtin.package:
      name: {{ item }}
      state: present
    loop:
      - nodejs
      - mysql

  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download backend_code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: extract file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip #bydefault ansible thn=inks this is present in ansible server and we want it to move it to remote server
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args: #here it will change directory and then installs dependencies
      chdir: /app

  - name: Copy file with owner and permissions
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      state: dump
      name: all
      target: /app/schema/backend.sql
